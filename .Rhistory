abline(mu)
x <- c(0.8, 0.47, 0.51, 0.73, 0.36, 0.58, 0.57, 0.85, 0.44, 0.42)
y <- c(1.39, 0.72, 1.55, 0.48, 1.19, -1.59, 1.23, -0.65, 1.49, 0.05)
beta1 <- sum(y*x) / sum(x^2)
beta0 <- mean(y) - beta1*mean(x)
data(mtcards)
data(mtcars)
str(mtcards)
str(mtcars)
lm(mpg~weight, mtcars)
lm(mpg~wt, mtcars)
.4*1.5
x <- c(8.58, 10.46, 9.01, 9.64, 8.86)
xn <- (x-mean(x))/sd(x)
sn
xn
sd(x)
mean(x)
8.58-9.31
x <- c(0.8, 0.47, 0.51, 0.73, 0.36, 0.58, 0.57, 0.85, 0.44, 0.42)
y <- c(1.39, 0.72, 1.55, 0.48, 1.19, -1.59, 1.23, -0.65, 1.49, 0.05)
lm(y~x)
x <- c(0.8, 0.47, 0.51, 0.73, 0.36, 0.58, 0.57, 0.85, 0.44, 0.42)
mean(x)
x <- c(0.18, -1.54, 0.42, 0.95)
w <- c(2, 1, 3, 1)
mean(x*w)
x*w
m <- x*w
mean(m)
mean(x)
mean(x)*w
mean(mean(x)*w)
mean((mean(x)^2)*w)
source('~/.active-rstudio-document', echo=TRUE)
set.seed(125)
inTrain <- createDataPartition(y=segmentationOriginal$Case, p=.75, list=FALSE)
training <- segmentationOriginal[inTrain, ]
testing <- segmentationOriginal[-inTrain, ]
head(segmentationOriginal)
mod1 <- train(Case ~ ., method="CART", data=training)
mod1 <- train(Case ~ ., method="rpart", data=training)
finalTest <- data.frame(TotalIntench2=c(23000, 50000, 57000, NA), FiberWidthCh1=c(10, 10, 8, 8), PerimStatusCh1=c(2, NA, NA, 2), VarIntenCh4=c(NA, 100, 100, 100))
finalTest
mod1Predict <- predict(mod1, testing)
confusionMatrix(testing$Case, mod1Predict)
predictions <- predict(mod1, finalTest)
finalTest <- data.frame(TotalIntench2=c(23000, 50000, 57000, NA), FiberWidthCh1=c(10, 10, 8, 8), PerimStatusCh1=c(2, NA, NA, 2), VarIntenCh4=c(NA, 100, 100, 100))
mod1Predict <- predict(mod1, testing)
confusionMatrix(testing$Case, mod1Predict)
predictions <- predict(mod1, finalTest)
head(training$Case)
head(training$Case, 100)
summary(training$Case)
summary(segmentationOriginal$Case)
fancyRpartPlot(mod1$finalModel, cex=.6)
library("rattle")
fancyRpartPlot(mod1$finalModel, cex=.6)
source('~/.active-rstudio-document', echo=TRUE)
str(testing)
inTrain <- createDataPartition(y=segmentationOriginal$Case, p=.5, list=FALSE)
training <- segmentationOriginal[inTrain, ]
testing <- segmentationOriginal[-inTrain, ]
summary(testing$Case)
summary(training$Case)
inTrain <- createDataPartition(y=segmentationOriginal$Case, p=.7, list=FALSE)
training <- segmentationOriginal[inTrain, ]
testing <- segmentationOriginal[-inTrain, ]
mod1 <- train(Class ~ ., method="rpart", data=training)
finalTest <- data.frame(TotalIntench2=c(23000, 50000, 57000, NA), FiberWidthCh1=c(10, 10, 8, 8), PerimStatusCh1=c(2, NA, NA, 2), VarIntenCh4=c(NA, 100, 100, 100))
mod1Predict <- predict(mod1, testing)
confusionMatrix(testing$Class, mod1Predict)
mod1 <- train(Class ~ ., method="rpart", data=training)
mod1Predict <- predict(mod1, testing)
confusionMatrix(testing$Class, mod1Predict)
predictions <- predict(mod1, finalTest)
fancyRpartPlot(mod1$finalModel, cex=.6)
source('~/.active-rstudio-document', echo=TRUE)
install.packages("pgmm")
source('~/.active-rstudio-document', echo=TRUE)
head(olive)
set.seed(125)
inTrain <- createDataPartition(y=olive$Area, p=.7, list=FALSE)
training <- segmentationOriginal[inTrain, ]
testing <- segmentationOriginal[-inTrain, ]
inTrain <- createDataPartition(y=olive$Area, p=.7, list=FALSE)
training <- olive[inTrain, ]
testing <- olive[-inTrain, ]
mod1 <- train(Area ~ ., method="rpart", data=training)
mod1Predict <- predict(mod1, testing)
confusionMatrix(testing$Class, mod1Predict)
confusionMatrix(testing$Area, mod1Predict)
mod1Predict <- predict(mod1, testing)
confusionMatrix(testing$Area, mod1Predict)
inTrain <- createDataPartition(y=olive$Area, p=.7, list=FALSE)
training <- olive[inTrain, ]
testing <- olive[-inTrain, ]
set.seed(125)
inTrain <- createDataPartition(y=olive$Area, p=.7, list=FALSE)
training <- olive[inTrain, ]
testing <- olive[-inTrain, ]
mod1 <- train(Area ~ ., method="rpart", data=training)
mod1Predict <- predict(mod1, testing)
mod1
mod1$finalModel
str(olive)
summary(olive)
mod1 <- train(Area ~ ., method="rpart", data=training)
mod1Predict <- predict(mod1, testing)
confusionMatrix(testing$Area, mod1Predict)
fancyRpartPlot(mod1$finalModel, cex=.6)
newdata = as.data.frame(t(colMeans(olive)))
predictions <- predict(mod1, newdata)
predictions
head(olive)
newdata = as.data.frame((colMeans(olive)))
newdata
source('~/.active-rstudio-document', echo=TRUE)
install.packages("ElemStatLearn")
source('~/.active-rstudio-document', echo=TRUE)
head(testSA)
mod1 <- train(chd ~ train[,c(2,36,7,8,9)], method="glm", family="binomial")
mod1 <- train(chd ~ train[,c(2,36,7,8,9)], method="glm", family="binomial", data=trainSA)
mod1 <- train(chd ~ trainSA[, c(2,36,7,8,9)], method="glm", family="binomial", data=trainSA)
mod1 <- train(chd ~ trainSA[, c(2,3,6,7,8,9)], method="glm", family="binomial", data=trainSA)
trainSA <- trainSA[, c(2,3,6,7,8,9)]
head(trainSA)
testSA = SAheart[-train,]
set.seed(13234)
trainSA <- trainSA[, c(2,3,6,7,8,9,10)]
train = sample(1:dim(SAheart)[1],size=dim(SAheart)[1]/2,replace=F)
trainSA = SAheart[train,]
testSA = SAheart[-train,]
set.seed(13234)
trainSA <- trainSA[, c(2,3,6,7,8,9,10)]
mod1 <- train(chd ~ ., method="glm", family="binomial", data=trainSA)
missClass = function(values,prediction){sum(((prediction > 0.5)*1) != values)/length(values)}
missClass(testSA, mod1)
missClass(testSA$chd, predict(mod1, testSA))
missClass(trainSA$chd, predict(mod1, trainSA))
names(testSA)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
head(vowel.train)
vowel.train$y <- as.facotr(vowel.train$y)
vowel.train$y <- as.factor(vowel.train$y)
vowel.test$y <- as.factor(vowel.test$y)
?varImp
set.seed(33833)
mod1 <- train(y~., method="rf", data=vowel.train)
varImp(mod1)
mod2 <- randomForest(y~., data=vowel.train)
varImp(mod2)
n <- varImp(mod2)
n <- n[order(n$Overall), ]
n
mod3 <- train(y~., method="rf", data=vowel.test)
varImp(mod3)
fancyRpartPlot(mod1$finalModel, cex=.6)
fancyRpartPlot(mod2$finalModel, cex=.6)
newsmedia <- data.frame(Month=c("November", "December", "January", "February", "March"), Pageviews=c(6307, 7960, 6612, 5987, 8913))
library(ggplot2)
ggplot(newsmedia, aes(Month, Pageviews)) + geom_bar(stat="identity", position="dodge")
ggplot(newsmedia, aes(Month, Pageviews)) + geom_line()
ggplot(newsmedia, aes(Month, Pageviews)) + geom_bar(stat="identity", position="dodge", aes(fill="steelblue"))
ggplot(newsmedia, aes(Month, Pageviews)) + geom_bar(stat="identity", position="dodge", fill="steelblue")
ggplot(newsmedia, aes(Month, Pageviews, ymax=1000)) + geom_bar(stat="identity", position="dodge", fill="steelblue")
ggplot(newsmedia, aes(Month, Pageviews, ymax=1200)) + geom_bar(stat="identity", position="dodge", fill="steelblue")
ggplot(newsmedia, aes(Month, Pageviews)) + geom_bar(stat="identity", position="dodge", fill="steelblue") + ylim(c(0, 1000))
newsmedia
str(newsmedia)
ggplot(newsmedia, aes(Month, Pageviews)) + geom_bar(stat="identity", position="dodge", fill="steelblue")
ggplot(newsmedia, aes(Month, Pageviews)) + geom_bar(stat="identity", position="dodge", fill="steelblue") + ylim(c(0,1250))
?ylim
ggplot(newsmedia, aes(Month, Pageviews)) + geom_bar(stat="identity", position="dodge", fill="steelblue") + labs(title="Pageviews to all News and Media pages by month")
newsmedia$Month <- as.factor(newsmedia$Month, levels=newsmedia$Month)
newsmedia$Month <- factor(newsmedia$Month, levels=newsmedia$Month)
ggplot(newsmedia, aes(Month, Pageviews)) + geom_bar(stat="identity", position="dodge", fill="steelblue") + labs(title="Pageviews to all News and Media pages by month")
newsmedia <- data.frame(Month=c("November", "December", "January", "February", "March"), Pageviews=c(6307, 7960, 6612, 5987, 8913))
newsmedia$Month <- factor(newsmedia$Month, levels=newsmedia$Month)
library(ggplot2)
ggplot(newsmedia, aes(Month, Pageviews)) + geom_bar(stat="identity", position="dodge", fill="steelblue") + labs(title="Pageviews to all News and Media pages by month")
newsmedia <- data.frame(Month=c("November", "December", "January", "February", "March"), Pageviews=c(6307, 7960, 6612, 5987, 8913))
newsmedia$Month <- factor(newsmedia$Month, levels=newsmedia$Month)
ggplot(newsmedia, aes(Month, Pageviews)) + geom_bar(stat="identity", position="dodge", fill="steelblue") + labs(title="Pageviews to all News and Media pages by month")
ggplot(newsmedia, aes(Month, Pageviews)) + geom_bar(stat="identity", position="dodge", fill="steelblue") + labs(title="Pageviews to all News and Media pages by month") + ylim(c(0,1000))
ggplot(newsmedia, aes(Month, Pageviews)) + geom_bar(stat="identity", position="dodge", fill="steelblue") + labs(title="Pageviews to all News and Media pages by month") + ylim(c(0, 1000))
ggplot(newsmedia, aes(Month, Pageviews)) + geom_bar(stat="identity", position="dodge", fill="steelblue") + labs(title="Pageviews to all News and Media pages by month") + ylim(c(0, 10000))
ggplot(newsmedia, aes(Month, Pageviews)) + geom_bar(stat="identity", position="dodge", fill="steelblue") + labs(title="Pageviews to all News and Media pages by month") + ylim(c(0, 10000)) + theme(panel.background = element_blank())
ggplot(newsmedia, aes(Month, Pageviews)) + geom_bar(stat="identity", position="dodge", fill="steelblue") + labs(title="Pageviews to all News and Media pages by month") + ylim(c(0, 10000)) + theme(panel.background = element_blank()) + geom_text(aes(label=Prop), size=4, position=position_dodge(width=1), vjust=-.5)
ggplot(newsmedia, aes(Month, Pageviews)) + geom_bar(stat="identity", position="dodge", fill="steelblue") + labs(title="Pageviews to all News and Media pages by month") + ylim(c(0, 10000)) + theme(panel.background = element_blank()) + geom_text(aes(label=Pageviews), size=4, position=position_dodge(width=1), vjust=-.5)
869+683+319+275+274
6307-2420
913+568
7961-(1053+913+568+555+476+467)
6162-(523+334+330+327+326)
5987-(666+511+348+299+285)
8913-(941+628+532+525+392)
rep(6, "November")
rep("November", 6)
nov <- data.frame(Story=c("College Celebrates Ring Delivery", "Concordia Theatre Presents Les Miserables", "Author Takes Winding Path to Success", "Finding the Global Perspective", "Hubbard Headlines Offutt Event", "Other"), Pageviews=c(869,683,319,275,274,3887), Month=rep("November", 6))
dec <- data.frame(Story=c("Celebrating a Concorida Christmas Tradition", "Christmas Concert Filled with Light", "Alumnus Research Becomes Personal", "They Came, They Saw, They Made History", "Concordia Great, Dr. Walther Prausnitz", "Other"), Pageviews=c(1053, 1481, 555, 476, 467, 3929), Month=rep("December", 6))
jan <- data.frame(Story=c("What's Complicated About Honoring King?", "Authors Announced for National Book Awards", "Short Documentary Gets International Recognition", "Grad Attends Top School for Public Health", "Play it Forward", "Other"), Pageviews=c(523,334,330,327,326,4332), Month=rep("January", 6))
feb <- data.frame(Story=c("The Singers Celebrate Clausen", "Concordia's Brainerd Concert is a Homecoming", "Kazoos at Concordia", "Formula for a Good Fit", "Wholly Concordia! Creating Connections", "Other"), Pageviews=c(666,511,348,299,285,3878), Month=rep("February", 6))
march <- data.frame(Story=c("Faculty Featured on TLC with Josh Groban", "Wholly Concordia! Better Business", "Spring Break 2015", "Getting Their Act Together", "Professor Featured on BBC","Other"), Pageviews=c(941,628,532,525,392,5895), Month=rep("March", 6))
months <- rbind(nov, dec, jan, feb, march)
months
ggplot(months, aes(Month, Pageviews)) + geom_bar(stat="identity", aes(fill=Story)) + labs(title="Pageviews to all News and Media pages by month") + ylim(c(0, 10000)) + theme(panel.background = element_blank()) + geom_text(aes(label=Pageviews), size=4, position=position_dodge(width=1), vjust=-.5)
nov <- data.frame(Story=c("College Celebrates Ring Delivery", "Concordia Theatre Presents Les Miserables", "Author Takes Winding Path to Success", "Finding the Global Perspective", "Hubbard Headlines Offutt Event", "Other"), Pageviews=c(869,683,319,275,274,3887), Month=rep("November", 6), Rank=c(1:6))
dec <- data.frame(Story=c("Celebrating a Concorida Christmas Tradition", "Christmas Concert Filled with Light", "Alumnus Research Becomes Personal", "They Came, They Saw, They Made History", "Concordia Great, Dr. Walther Prausnitz", "Other"), Pageviews=c(1053, 1481, 555, 476, 467, 3929), Month=rep("December", 6), Rank=c(1:6))
jan <- data.frame(Story=c("What's Complicated About Honoring King?", "Authors Announced for National Book Awards", "Short Documentary Gets International Recognition", "Grad Attends Top School for Public Health", "Play it Forward", "Other"), Pageviews=c(523,334,330,327,326,4332), Month=rep("January", 6), Rank=c(1:6))
feb <- data.frame(Story=c("The Singers Celebrate Clausen", "Concordia's Brainerd Concert is a Homecoming", "Kazoos at Concordia", "Formula for a Good Fit", "Wholly Concordia! Creating Connections", "Other"), Pageviews=c(666,511,348,299,285,3878), Month=rep("February", 6), Rank=c(1:6))
march <- data.frame(Story=c("Faculty Featured on TLC with Josh Groban", "Wholly Concordia! Better Business", "Spring Break 2015", "Getting Their Act Together", "Professor Featured on BBC","Other"), Pageviews=c(941,628,532,525,392,5895), Month=rep("March", 6), Rank=c(1:6))
months <- rbind(nov, dec, jan, feb, march)
ggplot(months, aes(Month, Pageviews)) + geom_bar(stat="identity", aes(fill=Rank)) + labs(title="Pageviews to all News and Media pages by month") + ylim(c(0, 10000)) + theme(panel.background = element_blank()) + geom_text(aes(label=Pageviews), size=4, position=position_dodge(width=1), vjust=-.5)
319+275+274+3887
3929+467+476+555
4332+326+327+330
3878+285+299+348
5895+392+525+532
# Top 2 Stories by Month
nov2 <- data.frame(Story=c("College Celebrates Ring Delivery", "Concordia Theatre Presents Les Miserables", "Other"), Pageviews=c(869,683,4755), Month=rep("November", 3), Rank=c(1:3))
dec2 <- data.frame(Story=c("Celebrating a Concorida Christmas Tradition", "Christmas Concert Filled with Light", "Other"), Pageviews=c(1053, 1481, 5427), Month=rep("December", 3), Rank=c(1:3))
jan2 <- data.frame(Story=c("What's Complicated About Honoring King?", "Authors Announced for National Book Awards",  "Other"), Pageviews=c(523,334,5315), Month=rep("January", 3), Rank=c(1:3))
feb2 <- data.frame(Story=c("The Singers Celebrate Clausen", "Concordia's Brainerd Concert is a Homecoming", "Other"), Pageviews=c(666,511,4810), Month=rep("February", 3), Rank=c(1:3))
march2 <- data.frame(Story=c("Faculty Featured on TLC with Josh Groban", "Wholly Concordia! Better Business", "Other"), Pageviews=c(941,628,7344), Month=rep("March", 3), Rank=c(1:3))
months2 <- rbind(nov2, dec2, jan2, feb2, march2)
ggplot(months2, aes(Month, Pageviews)) + geom_bar(stat="identity", aes(fill=Rank)) + labs(title="Pageviews to all News and Media pages by month") + ylim(c(0, 10000)) + theme(panel.background = element_blank()) + geom_text(aes(label=Pageviews), size=4, position=position_dodge(width=1), vjust=-.5)
# Top 2 Stories by Month
nov2 <- data.frame(Story=c("College Celebrates Ring Delivery", "Concordia Theatre Presents Les Miserables", "Other"), Pageviews=c(869,683,4755), Month=rep("November", 3), Rank=c(1:3))
dec2 <- data.frame(Story=c("Christmas Concert Filled with Light","Celebrating a Concorida Christmas Tradition",  "Other"), Pageviews=c(1481, 1053, 5427), Month=rep("December", 3), Rank=c(1:3))
jan2 <- data.frame(Story=c("What's Complicated About Honoring King?", "Authors Announced for National Book Awards",  "Other"), Pageviews=c(523,334,5315), Month=rep("January", 3), Rank=c(1:3))
feb2 <- data.frame(Story=c("The Singers Celebrate Clausen", "Concordia's Brainerd Concert is a Homecoming", "Other"), Pageviews=c(666,511,4810), Month=rep("February", 3), Rank=c(1:3))
march2 <- data.frame(Story=c("Faculty Featured on TLC with Josh Groban", "Wholly Concordia! Better Business", "Other"), Pageviews=c(941,628,7344), Month=rep("March", 3), Rank=c(1:3))
months2 <- rbind(nov2, dec2, jan2, feb2, march2)
ggplot(months2, aes(Month, Pageviews)) + geom_bar(stat="identity", aes(fill=Rank)) + labs(title="Pageviews to all News and Media pages by month") + ylim(c(0, 10000)) + theme(panel.background = element_blank()) + geom_text(aes(label=Pageviews), size=4, position=position_dodge(width=1), vjust=-.5)
+ geom_text(aes(label=Prop), size=4, position=position_dodge(width=1), vjust=-.5)
ggplot(months2, aes(Month, Pageviews)) + geom_bar(stat="identity", aes(fill=Rank)) + labs(title="Pageviews to all News and Media pages by month") + ylim(c(0, 10000)) + theme(panel.background = element_blank())
newsmedia <- data.frame(Month=c("November", "December", "January", "February", "March"), Pageviews=c(6307, 7960, 6162, 5987, 8913))
newsmedia$Month <- factor(newsmedia$Month, levels=newsmedia$Month)
#library(ggplot2)
ggplot(newsmedia, aes(Month, Pageviews)) + geom_bar(stat="identity", position="dodge", fill="steelblue") + labs(title="Pageviews to all News and Media pages by month") + ylim(c(0, 10000)) + theme(panel.background = element_blank()) + geom_text(aes(label=Pageviews), size=4, position=position_dodge(width=1), vjust=-.5)
ggplot(newsmedia, aes(Month, Pageviews)) + geom_bar(stat="identity", position="dodge", fill="steelblue") + labs(title="News & Media Pageviews") + ylim(c(0, 10000)) + theme(panel.background = element_blank()) + geom_text(aes(label=Pageviews), size=4, position=position_dodge(width=1), vjust=-.5)
appurls <- data.frame(Month=c("November", "December", "January", "February", "March"), Pageviews=c(497, 592,497,503,367))
appurls$Month <- factor(appurls$Month, levels=appurls$Month)
#library(ggplot2)
ggplot(appurls, aes(Month, Pageviews)) + geom_bar(stat="identity", position="dodge", fill="steelblue") + labs(title="News & Media Pageviews") + ylim(c(0, 10000)) + theme(panel.background = element_blank()) + geom_text(aes(label=Pageviews), size=4, position=position_dodge(width=1), vjust=-.5)
ggplot(appurls, aes(Month, Pageviews)) + geom_bar(stat="identity", position="dodge", fill="steelblue") + labs(title="News & Media Pageviews") + ylim(c(0, 750)) + theme(panel.background = element_blank()) + geom_text(aes(label=Pageviews), size=4, position=position_dodge(width=1), vjust=-.5)
ggplot(appurls, aes(Month, Pageviews)) + geom_bar(stat="identity", position="dodge", fill="steelblue") + labs(title="Unique Application URL Pageviews") + ylim(c(0, 750)) + theme(panel.background = element_blank()) + geom_text(aes(label=Pageviews), size=4, position=position_dodge(width=1), vjust=-.5)
source('~/.active-rstudio-document')
homepage <- data.frame(Month=c("November", "December", "January", "February", "March", "April"), Pageviews=c(55506, 42495,53938,51982,52050,50616))
homepage$Month <- factor(homepage$Month, levels=homepage$Month)
#library(ggplot2)
ggplot(homepage, aes(Month, Pageviews)) + geom_bar(stat="identity", position="dodge", fill="steelblue") + labs(title="Homepage Pageviews") + ylim(c(0, 750)) + theme(panel.background = element_blank()) + geom_text(aes(label=Pageviews), size=4, position=position_dodge(width=1), vjust=-.5)
library(ggplot2)
ggplot(homepage, aes(Month, Pageviews)) + geom_bar(stat="identity", position="dodge", fill="steelblue") + labs(title="Homepage Pageviews") + ylim(c(0, 750)) + theme(panel.background = element_blank()) + geom_text(aes(label=Pageviews), size=4, position=position_dodge(width=1), vjust=-.5)
ggplot(homepage, aes(Month, Pageviews)) + geom_bar(stat="identity", position="dodge", fill="steelblue") + labs(title="Homepage Pageviews") + ylim(c(0, 75000)) + theme(panel.background = element_blank()) + geom_text(aes(label=Pageviews), size=4, position=position_dodge(width=1), vjust=-.5)
ggplot(homepage, aes(Month, Pageviews)) + geom_bar(stat="identity", position="dodge", fill="steelblue") + labs(title="Homepage Pageviews") + ylim(c(0, 65000)) + theme(panel.background = element_blank()) + geom_text(aes(label=Pageviews), size=4, position=position_dodge(width=1), vjust=-.5)
getwd()
library("ggplot2")
rates <- data.frame(Percent=c(.6176,.9396,.3634,.5331,.2697,.1686,.1211,.0889), Rate=c(rep("open rate",4), rep("click to open rate",4)), Group=c(rep(c("deposit cobberlife", "deposit overall", "admit cobberlife", "admit overall"), 4)))
View(rates)
ggplot(rates, aes(Group, Percent)) + geom_bar(stat="identity", position="dodge", aes(fill=Rate))
rates <- data.frame(Percent=c(.6176,.9396,.3634,.5331,.2697,.1686,.1211,.0889), Rate=c(rep("open rate",4), rep("click to open rate",4)), Group=c(rep(c("deposit", "deposit", "admit", "admit"), 4)), Send=c(rep(c("cobberlife", "overall"), 8))
View(rates)
rates <- data.frame(Percent=c(.6176,.9396,.3634,.5331,.2697,.1686,.1211,.0889), Rate=c(rep("open rate",4), rep("click to open rate",4)), Group=c(rep(c("deposit", "deposit", "admit", "admit"), 4)), Send=c(rep(c("cobberlife", "overall"), 8)))
View(rates)
ggplot(rates, aes(Group, Percent)) + geom_bar(stat="identity", position="dodge", aes(fill=Rate))
rates$Combo <- paste(rates$Rate, rates$Send)
ggplot(rates, aes(Group, Percent)) + geom_bar(stat="identity", position="dodge", aes(fill=Combo))
ggplot(rates, aes(Group, Percent)) + geom_bar(stat="identity", position="dodge", aes(fill=Combo)) + scale_fill_brewer(palette="Paired")
rates <- data.frame(Percent=c(.6176,.9396,.3634,.5331,.2697,.1686,.1211,.0889), Rate=c(rep("open rate",4), rep("click to open rate",4)), Group=c(rep(c("deposit", "deposit", "admit", "admit"), 4)), Send=c(rep(c("cobberlife", "overall"), 8)))
rates$Combo <- paste(rates$Rate, rates$Group)
ggplot(rates, aes(Group, Percent)) + geom_bar(stat="identity", position="dodge", aes(fill=Combo)) + scale_fill_brewer(palette="Paired")
View(rates)
ggplot(rates, aes(Combo, Percent)) + geom_bar(stat="identity", position="dodge", aes(fill=Group)) + scale_fill_brewer(palette="Paired")
ggplot(rates, aes(Combo, Percent)) + geom_bar(stat="identity", position="dodge", aes(fill=Send)) + scale_fill_brewer(palette="Paired")
ggplot(rates, aes(Combo, Percent)) + geom_bar(stat="identity", position="dodge", aes(fill=Send)) + scale_fill_brewer(palette="Paired") + theme(panel.background = element_blank()) + labs("CobberLife vs. Overall Rates", y="Percent", x="")
ggplot(rates, aes(Combo, Percent)) + geom_bar(stat="identity", position="dodge", aes(fill=Send)) + scale_fill_brewer(palette="Paired") + theme(panel.background = element_blank(), axis.text.x = element_text(angle = 45, hjust = 1)) + labs("CobberLife vs. Overall Rates", y="Percent", x="")
ggplot(rates, aes(Combo, Percent)) + geom_bar(stat="identity", position="dodge", aes(fill=Send)) + scale_fill_brewer(palette="Paired") + theme(panel.background = element_blank(), axis.text.x = element_text(angle = 15, hjust = 1)) + labs("CobberLife vs. Overall Rates", y="Percent", x="")
ggplot(rates, aes(Combo, Percent)) + geom_bar(stat="identity", position="dodge", aes(fill=Send)) + scale_fill_brewer(palette="Paired") + theme(panel.background = element_blank(), axis.text.x = element_text(angle = 15, hjust = 1)) + labs(title="CobberLife vs. Overall Rates", y="Percent", x="")
getwd()
ggplot(rates, aes(Combo, Percent)) + geom_bar(stat="identity", position="dodge", aes(fill=Send)) + scale_fill_brewer(palette="Paired") + theme(panel.background = element_blank(), axis.text.x = element_text(angle = 15, hjust = 1)) + labs(title="CobberLife vs. Overall Rates", y="Percent", x="") + geom_text(aes(label=Percent)
)
getwd()
setwd()~
)
setwd(~/)
setwd(~)
setwd("~")
getwd()
news <- read.table("/Users/kwalker/git_projects/DS_Capstone/data/US_en.news.sample.txt", stringsAsFactors=FALSE)
news <- read.table("/Users/kwalker/git_projects/DS_Capstone/data/en_US.news.sample.txt", stringsAsFactors=FALSE)
twitter <- read.table("/Users/kwalker/git_projects/DS_Capstone/data/en_US.twitter.sample.txt", stringsAsFactors=FALSE)
blog <- read.table("/Users/kwalker/git_projects/DS_Capstone/data/en_US.blog.sample.txt", stringsAsFactors=FALSE)
install.packages("tm")
install.packages("RWeka")
library("knitr")
library("tm")
library("RWeka")
hist(nchar(news))
unique(blog[1:100],)
unique(blog[1:10,])
unique(twitter[1:10,])
strsplit(twitter[1:10,], " ")
test <- strsplit(twitter[1:5,], " ")
test
corpusT = Corpus(VectorSource(twitter[1:10,]))
corpusT
corpusT <- tm_map(corpusT, tolower)
corpusT <- tm_map(corpusT, PlainTextDocument)
corpusT <- tm_map(corpusT, removePunctuation)
corpusT
summary(corpusT)
corpusT <- tm_map(corpusT, removeWords, stopwords("english"))
corpusT <- tm_map(corpusT, stemDocument)
corpusT = Corpus(VectorSource(twitter[1:10,]))
corpusT <- tm_map(corpusT, tolower)
corpusT <- tm_map(corpusT, PlainTextDocument)
corpusT <- tm_map(corpusT, removePunctuation)
corpusT <- tm_map(corpusT, stemDocument)
?tm_map
test <- twitter[1:10,]
test
test <- paste(test, collapse=" ")
test
test <- twitter[1:10,]
nchar(test)
test <- paste(test, collapse=" ")
nchar(test)
test <- strsplit(test, "?|!|.")
rest
test
test <- twitter[1:10,]
test <- paste(test, collapse=" ")
test <- strsplit(test, "\\?|\\!|\\.")
test
test <- strsplit(test, "\\? |\\! |\\. ")
test <- twitter[1:10,]
test <- paste(test, collapse=" ")
test <- strsplit(test, "\\? |\\! |\\. ")
test
test <- twitter[1:10,]
test <- paste(test, collapse=" ")
test <- strsplit(test, "\\? |\\?? |\\! |\\!! |\\. ")
test
test <- twitter[1:10,]
test <- paste(test, collapse=" ")
test <- strsplit(test, "\\? |\\! |\\. ")
test
test <- twitter[1:10,]
test
test <- paste(test, collapse=" ")
test
test <- strsplit(test, "\\?+ |\\!+ |\\.+ ")
test
test <- twitter[1:10,]
test <- strsplit(test, "\\?+ |\\!+ |\\.+ ")
test
test <- paste(test, collapse=" ")
test
test <- twitter[1:10,]
test <- paste(test, collapse=" ")
test
test <- strsplit(test, "\\?+ |\\!+ |\\.+ ")
test
library("knitr")
library("tm")
library("RWeka")
library("plyr")
library("ggplot2")
library("gridExtra")
library("SnowballC")
opts_chunk$set(cache=TRUE, warning=FALSE, message=FALSE, fig.height=4, fig.width=4, echo=FALSE)
news <- read.table("/Users/kwalker/git_projects/DS_Capstone/data/en_US.news.sample.txt", stringsAsFactors=FALSE)
twitter <- read.table("/Users/kwalker/git_projects/DS_Capstone/data/en_US.twitter.sample.txt", stringsAsFactors=FALSE)
blog <- read.table("/Users/kwalker/git_projects/DS_Capstone/data/en_US.blog.sample.txt", stringsAsFactors=FALSE)
#news<-iconv(t, to="ASCII", sub = "")
#news <- read.table("/Users/kaylinwalker/R/DS_Capstone/data/en_US.news.sample.txt", stringsAsFactors=FALSE)
#twitter <- read.table("/Users/kaylinwalker/R/DS_Capstone/data/en_US.twitter.sample.txt", stringsAsFactors=FALSE)
#blog <- read.table("/Users/kaylinwalker/R/DS_Capstone/data/en_US.blog.sample.txt", stringsAsFactors=FALSE)
newsTT <- WordTokenizer(unlist(news))
twitterTT <- WordTokenizer(unlist(twitter))
blogTT <- WordTokenizer(unlist(blog))
avgChar <- function (x) round(sum(nchar(unlist(x)))/dim(x)[1],0)
avgTokens  <- function (x,y) round(length(y)/dim(x)[1],0)
wordTable <- data.frame(
Corpus=c("News 5% Sample", "Twitter 5% Sample", "Blog 5% Sample"),
Lines=c(dim(news)[1], dim(twitter)[1], dim(blog)[1]),
Avg.Char.Line=c(avgChar(news), avgChar(twitter), avgChar(blog)),
Avg.Tokens.Line=c(avgTokens(news, newsTT), avgTokens(twitter, twitterTT), avgTokens(blog, blogTT)),
Total.Tokens=c(length(newsTT), length(twitterTT), length(blogTT)),
Unique.Tokens=c(length(unique(newsTT)), length(unique(twitterTT)), length(unique(blogTT)))
)
kable(wordTable, row.names=FALSE)
shiny::runApp('git_projects/DS_Capstone/shiny')
shiny::runApp('git_projects/DS_Capstone/shiny')
source('~/.active-rstudio-document', echo=TRUE)
tail(unigrams)
setwd("/Users/kwalker/git_projects/DS_Capstone/")
#setwd("/Users/kaylinwalker/R/DS_Capstone")
corpus <- Corpus(DirSource("data"), readerControl=list(language="en"))
corpus <- tm_map(corpus, removeNumbers)
corpus <- tm_map(corpus, removePunctuation)
corpus <- tm_map(corpus, stripWhitespace)
corpus <- tm_map(corpus, content_transformer(tolower))
#writeCorpus(corpus, path=".", filenames=paste(seq_along(corpus)))
options(mc.cores=1)
unigrams <- function(x) NGramTokenizer(x, Weka_control(min=0, max=1))
uniCorpus <- TermDocumentMatrix(corpus, control=list(tokenize = unigrams, wordLengths=c(1,Inf)))
x <- findFreqTerms(corpus, lowfreq=0)
x <- findFreqTerms(uniCorpus, lowfreq=0)
tail9x
tail9x
tail(x)
tail(freqUni)
freqFunc <- function(corpus) {
terms <- findFreqTerms(corpus, lowfreq = 5)
table <- rowSums(as.matrix(corpus[terms,]))
table <- data.frame(word=names(table), freq=table)
table <- table[order(-table$freq), ]
table$rank <- 1:length(table[,1])
return(table)
}
freqUni <- freqFunc(uniCorpus)
tail(freqUni)
freqFunc <- function(corpus, low) {
terms <- findFreqTerms(corpus, lowfreq = low)
table <- rowSums(as.matrix(corpus[terms,]))
table <- data.frame(word=names(table), freq=table)
table <- table[order(-table$freq), ]
table$rank <- 1:length(table[,1])
return(table)
}
n <- freqFunc(uniCorpus, 0)
tail(n)
inspect(uniCorpus[1:10])
inspect(uniCorpus[1:10,])
n <- rowSums(as.matrix(Unicorpus))
n <- rowSums(as.matrix(uniCorpus))
head(n)
head(n, 20)
singles <- rowSums(as.matrix(uniCorpus))
singles <- singles[order(singles),]
singles <- singles[order(singles)]
head(singls)
head(singles)
singles[100000]
singles[50000]
singles[60000]
singles[55000]
singles[57000]
singles[58000]
singles <- subset(singles, singles == 1)
singles <- dim(singles[1])
singles <- rowSums(as.matrix(uniCorpus))
singles <- singles[order(singles)]
singles <- subset(singles, singles == 1)
singles <- dim(singles)[1]
singles <- rowSums(as.matrix(uniCorpus))
singles <- singles[order(singles)]
singles <- subset(singles, singles == 1)
dim(singles)
length(singles)
lonelyRiders <- function(x) {
singles <- rowSums(as.matrix(uniCorpus))
singles <- singles[order(singles)]
singles <- subset(singles, singles == 1)
singles <- length(singles)
return(singles)
}
lonelyUni <- lonelyRidres(uniCorpus)
lonelyUni <- lonelyRiders(uniCorpus)
lonelyBi <- lonelyRiders(biCorpus)
lonelyRiders <- function(x) {
singles <- rowSums(as.matrix(x))
singles <- singles[order(singles)]
singles <- subset(singles, singles == 1)
singles <- length(singles)
return(singles)
}
lonelyUni <- lonelyRiders(uniCorpus)
lonelyBi <- lonelyRiders(biCorpus)
bigrams <- function(x) NGramTokenizer(x, Weka_control(min=2, max=2))
trigrams <- function(x) NGramTokenizer(x, Weka_control(min=3, max=3))
quadgrams <- function(x) NGramTokenizer(x, Weka_control(min=4, max=4))
biCorpus <- TermDocumentMatrix(corpus, control=list(tokenize = bigrams))
lonelyBi <- lonelyRiders(biCorpus)
lonelyTri <- lonelyRiders(triCorpus)
lonelyQuad <- lonelyRiders(quadCorpus)
dim(uniCorpus)
dim(uniCorpus)[1]
x <- unicorpus
x <- unicCorpus
x <- uniCorpus
singles <- rowSums(as.matrix(x))
singles <- singles[order(singles)]
singles <- subset(singles, singles == 1)
singles <- length(singles)
singleRate <- singles/dim(x)[1]
return(singles)
x <- biCorpus
singles <- rowSums(as.matrix(x))
singles <- singles[order(singles)]
singles <- subset(singles, singles == 1)
singles <- length(singles)
singleRate <- singles/dim(x)[1]
singles <- rowSums(as.matrix(x))
singles <- singles[order(singles)]
singles <- subset(singles, singles == 1)
head(singles)
tail(singles)
